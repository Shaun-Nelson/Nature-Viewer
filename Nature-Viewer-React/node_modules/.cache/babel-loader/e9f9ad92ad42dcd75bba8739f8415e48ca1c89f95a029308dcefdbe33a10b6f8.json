{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/dev/Nature-Viewer/Nature-Viewer-React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Slider from \"./components/Slider\";\nimport MenuButton from \"./components/MenuButton\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"563492ad6f91700001000001e2f01e5688a94b13b884103cacf2626b\";\nconst endpoint = \"https://api.pexels.com/v1/search/?page=1&per_page=40&query=Nature\";\nconst App = () => {\n  _s();\n  const [altText, setAltText] = useState(\"\");\n  const [photographer, setPhotographer] = useState(\"\");\n  const [id, setId] = useState(null);\n  const [height, setHeight] = useState(null);\n  const [width, setWidth] = useState(null);\n  const [photoURL, setPhotoURL] = useState(\"\");\n  const [photoLeft, setPhotoLeft] = useState(\"\");\n  const [photoRight, setPhotoRight] = useState(\"\");\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [showSlider, setShowSlider] = useState(false);\n  const [photosList, setPhotosList] = useState([]);\n  const getPhotos = async (search, handler) => {\n    await fetch(search, {\n      headers: {\n        Authorization: API_KEY\n      }\n    }).then(res => res.json(), rej => console.log(rej)).then(data => {\n      if (!isUpdated) {\n        setIsUpdated(true);\n        handler(data);\n      }\n    });\n  };\n  const displayRandomPhoto = data => {\n    console.log(\"[DATA] \", data);\n    setPhotosList(data.photos);\n    let index = Math.floor(Math.random() * data.photos.length);\n    if (index === 0) index += 1;\n    if (index === data.photos.length - 1) index -= 1;\n    let photoMid = data.photos[index];\n    window.innerWidth >= 800 ? document.body.style.backgroundImage = `url('${photoMid.src.landscape}')` : document.body.style.backgroundImage = `url('${photoMid.src.portrait}')`;\n    setPhotoLeft(data.photos[index - 1].src.tiny);\n    setPhotoRight(data.photos[index + 1].src.tiny);\n    setAltText(photoMid.alt);\n    setPhotographer(photoMid.photographer);\n    setPhotoURL(photoMid.src.tiny);\n    setId(photoMid.id);\n    setHeight(photoMid.height);\n    setWidth(photoMid.width);\n  };\n  getPhotos(endpoint, displayRandomPhoto);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showSlider && /*#__PURE__*/_jsxDEV(Slider, {\n      altText: altText,\n      photographer: photographer,\n      src: photoURL,\n      id: id,\n      height: height,\n      width: width,\n      photoLeft: photoLeft,\n      photoRight: photoRight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-column-container\",\n      children: /*#__PURE__*/_jsxDEV(MenuButton, {\n        onClick: () => setShowSlider(!showSlider),\n        menuButtonText: showSlider ? \"v Menu\" : \"^ Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"XAcESr43yTHU89Jv4lVmsBT35PU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Slider","MenuButton","API_KEY","endpoint","App","altText","setAltText","photographer","setPhotographer","id","setId","height","setHeight","width","setWidth","photoURL","setPhotoURL","photoLeft","setPhotoLeft","photoRight","setPhotoRight","isUpdated","setIsUpdated","showSlider","setShowSlider","photosList","setPhotosList","getPhotos","search","handler","fetch","headers","Authorization","then","res","json","rej","console","log","data","displayRandomPhoto","photos","index","Math","floor","random","length","photoMid","window","innerWidth","document","body","style","backgroundImage","src","landscape","portrait","tiny","alt"],"sources":["/Users/shaun/Documents/dev/Nature-Viewer/Nature-Viewer-React/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Slider from \"./components/Slider\";\nimport MenuButton from \"./components/MenuButton\";\n\nconst API_KEY = \"563492ad6f91700001000001e2f01e5688a94b13b884103cacf2626b\";\nconst endpoint =\n  \"https://api.pexels.com/v1/search/?page=1&per_page=40&query=Nature\";\n\nconst App = () => {\n  const [altText, setAltText] = useState(\"\");\n  const [photographer, setPhotographer] = useState(\"\");\n  const [id, setId] = useState(null);\n  const [height, setHeight] = useState(null);\n  const [width, setWidth] = useState(null);\n  const [photoURL, setPhotoURL] = useState(\"\");\n  const [photoLeft, setPhotoLeft] = useState(\"\");\n  const [photoRight, setPhotoRight] = useState(\"\");\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [showSlider, setShowSlider] = useState(false);\n  const [photosList, setPhotosList] = useState([]);\n\n  const getPhotos = async (search, handler) => {\n    await fetch(search, {\n      headers: {\n        Authorization: API_KEY,\n      },\n    })\n      .then(\n        (res) => res.json(),\n        (rej) => console.log(rej)\n      )\n      .then((data) => {\n        if (!isUpdated) {\n          setIsUpdated(true);\n          handler(data);\n        }\n      });\n  };\n\n  const displayRandomPhoto = (data) => {\n    console.log(\"[DATA] \", data);\n    setPhotosList(data.photos);\n    let index = Math.floor(Math.random() * data.photos.length);\n    if (index === 0) index += 1;\n    if (index === data.photos.length - 1) index -= 1;\n    let photoMid = data.photos[index];\n\n    window.innerWidth >= 800\n      ? (document.body.style.backgroundImage = `url('${photoMid.src.landscape}')`)\n      : (document.body.style.backgroundImage = `url('${photoMid.src.portrait}')`);\n\n    setPhotoLeft(data.photos[index - 1].src.tiny);\n    setPhotoRight(data.photos[index + 1].src.tiny);\n    setAltText(photoMid.alt);\n    setPhotographer(photoMid.photographer);\n    setPhotoURL(photoMid.src.tiny);\n    setId(photoMid.id);\n    setHeight(photoMid.height);\n    setWidth(photoMid.width);\n  };\n\n  getPhotos(endpoint, displayRandomPhoto);\n\n  return (\n    <>\n      {showSlider && (\n        <Slider\n          altText={altText}\n          photographer={photographer}\n          src={photoURL}\n          id={id}\n          height={height}\n          width={width}\n          photoLeft={photoLeft}\n          photoRight={photoRight}\n        />\n      )}\n      <div className='flex-column-container'>\n        <MenuButton\n          onClick={() => setShowSlider(!showSlider)}\n          menuButtonText={showSlider ? \"v Menu\" : \"^ Menu\"}\n        ></MenuButton>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}