{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/dev/Nature-Viewer/Nature-Viewer-React/src/App.js\";\nimport React from \"react\";\nimport Carousel from \"./components/Carousel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"563492ad6f91700001000001e2f01e5688a94b13b884103cacf2626b\";\nconst endpoint = \"https://api.pexels.com/v1/search/?page=1&per_page=40&query=Nature\";\nconst query = \"/search?query=\";\nconst search = \"Nature\";\nconst orient = \"&orientation=portait\";\nconst img = document.getElementById(\"img\");\nconst btn = document.getElementById(\"btn\");\nconst searchbar = document.getElementById(\"searchbar\");\nconst searchParams = document.getElementById(\"search-parameters\");\nconst photographer = document.getElementById(\"photographer\");\nconst altText = document.getElementById(\"alt-text\");\nconst url = endpoint + search;\nconst App = () => {\n  const getPhotos = async (search, handler) => {\n    await fetch(search, {\n      headers: {\n        Authorization: API_KEY\n      }\n    }).then(res => res.json(), rej => console.log(rej)).then(data => {\n      handler(data);\n    });\n  };\n  const displayRandomPhoto = data => {\n    console.log(data);\n    return;\n    let photo = data.photos[Math.floor(Math.random() * data.photos.length)];\n    window.innerWidth >= 800 ? document.body.style.backgroundImage = `url('${photo.src.landscape}')` : document.body.style.backgroundImage = `url('${photo.src.portrait}')`;\n    altText.innerHTML = photo.alt;\n    photographer.innerHTML = `Photographer: ${photo.photographer}`;\n  };\n  const updatePhoto = () => {\n    getPhotos(endpoint, displayRandomPhoto);\n  };\n  updatePhoto();\n  return /*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Carousel","API_KEY","endpoint","query","search","orient","img","document","getElementById","btn","searchbar","searchParams","photographer","altText","url","App","getPhotos","handler","fetch","headers","Authorization","then","res","json","rej","console","log","data","displayRandomPhoto","photo","photos","Math","floor","random","length","window","innerWidth","body","style","backgroundImage","src","landscape","portrait","innerHTML","alt","updatePhoto"],"sources":["/Users/shaun/Documents/dev/Nature-Viewer/Nature-Viewer-React/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Carousel from \"./components/Carousel\";\n\nconst API_KEY = \"563492ad6f91700001000001e2f01e5688a94b13b884103cacf2626b\";\nconst endpoint =\n  \"https://api.pexels.com/v1/search/?page=1&per_page=40&query=Nature\";\nconst query = \"/search?query=\";\nconst search = \"Nature\";\nconst orient = \"&orientation=portait\";\nconst img = document.getElementById(\"img\");\nconst btn = document.getElementById(\"btn\");\nconst searchbar = document.getElementById(\"searchbar\");\nconst searchParams = document.getElementById(\"search-parameters\");\nconst photographer = document.getElementById(\"photographer\");\nconst altText = document.getElementById(\"alt-text\");\nconst url = endpoint + search;\n\nconst App = () => {\n  const getPhotos = async (search, handler) => {\n    await fetch(search, {\n      headers: {\n        Authorization: API_KEY,\n      },\n    })\n      .then(\n        (res) => res.json(),\n        (rej) => console.log(rej)\n      )\n      .then((data) => {\n        handler(data);\n      });\n  };\n\n  const displayRandomPhoto = (data) => {\n    console.log(data);\n    return;\n    let photo = data.photos[Math.floor(Math.random() * data.photos.length)];\n    window.innerWidth >= 800\n      ? (document.body.style.backgroundImage = `url('${photo.src.landscape}')`)\n      : (document.body.style.backgroundImage = `url('${photo.src.portrait}')`);\n    altText.innerHTML = photo.alt;\n    photographer.innerHTML = `Photographer: ${photo.photographer}`;\n  };\n\n  const updatePhoto = () => {\n    getPhotos(endpoint, displayRandomPhoto);\n  };\n  updatePhoto();\n  return <Carousel />;\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,MAAMC,OAAO,GAAG,0DAA0D;AAC1E,MAAMC,QAAQ,GACZ,mEAAmE;AACrE,MAAMC,KAAK,GAAG,gBAAgB;AAC9B,MAAMC,MAAM,GAAG,QAAQ;AACvB,MAAMC,MAAM,GAAG,sBAAsB;AACrC,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAC1C,MAAMC,GAAG,GAAGF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;AAC1C,MAAME,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACtD,MAAMG,YAAY,GAAGJ,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;AACjE,MAAMI,YAAY,GAAGL,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;AAC5D,MAAMK,OAAO,GAAGN,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;AACnD,MAAMM,GAAG,GAAGZ,QAAQ,GAAGE,MAAM;AAE7B,MAAMW,GAAG,GAAG,MAAM;EAChB,MAAMC,SAAS,GAAG,OAAOZ,MAAM,EAAEa,OAAO,KAAK;IAC3C,MAAMC,KAAK,CAACd,MAAM,EAAE;MAClBe,OAAO,EAAE;QACPC,aAAa,EAAEnB;MACjB;IACF,CAAC,CAAC,CACCoB,IAAI,CACFC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,EAClBC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAC1B,CACAH,IAAI,CAAEM,IAAI,IAAK;MACdV,OAAO,CAACU,IAAI,CAAC;IACf,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,kBAAkB,GAAID,IAAI,IAAK;IACnCF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjB;IACA,IAAIE,KAAK,GAAGF,IAAI,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,IAAI,CAACG,MAAM,CAACI,MAAM,CAAC,CAAC;IACvEC,MAAM,CAACC,UAAU,IAAI,GAAG,GACnB7B,QAAQ,CAAC8B,IAAI,CAACC,KAAK,CAACC,eAAe,GAAI,QAAOV,KAAK,CAACW,GAAG,CAACC,SAAU,IAAG,GACrElC,QAAQ,CAAC8B,IAAI,CAACC,KAAK,CAACC,eAAe,GAAI,QAAOV,KAAK,CAACW,GAAG,CAACE,QAAS,IAAI;IAC1E7B,OAAO,CAAC8B,SAAS,GAAGd,KAAK,CAACe,GAAG;IAC7BhC,YAAY,CAAC+B,SAAS,GAAI,iBAAgBd,KAAK,CAACjB,YAAa,EAAC;EAChE,CAAC;EAED,MAAMiC,WAAW,GAAG,MAAM;IACxB7B,SAAS,CAACd,QAAQ,EAAE0B,kBAAkB,CAAC;EACzC,CAAC;EACDiB,WAAW,EAAE;EACb,oBAAO,QAAC,QAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AACrB,CAAC;AAAC,KAhCI9B,GAAG;AAkCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}